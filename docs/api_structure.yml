- endpoint: "GET /students/:studentID/courses"
  documentation: "Get the list of courses that a student is enrolled in"
  request_parameters:
    student_id: 
      type: "String"
      required: true
    max_results:
      type: "Integer"
      required: false
    page:
      type: "Integer"
      required: false
  response:
    status_code: 200
    body:
    # Returns courseName, courseID, instructorName, startDate, progress

- endpoint: "GET /students/:studentID/courses/:courseID"
  documentation: "Get the details of a specific course that a student is enrolled in"
  request_parameters:
    student_id: 
      type: "String"
      required: true
    course_id: 
      type: "String"
      required: true
    max_results:
      type: "Integer"
      required: false
    page:
      type: "Integer"
      required: false
  response:
    status_code: 200
    body:
    # Returns courseName, courseID, instructorName, startDate, progress, chapters
  
- endpoint: "GET /students/:studentID/courses/:courseID/chapters/:chapterID"
  documentation: "Get the details of a specific chapter in a course that a student is enrolled in"
  request_parameters:
    student_id: 
      type: "String"
      required: true
    course_id: 
      type: "String"
      required: true
    chapter_id: 
      type: "String"
      required: true
  response:
    status_code: 200
    body:
    # Returns chapterName, chapterID, progress, videos with a list of assessmentIDs and whether the assessment was completed

- endpoint: "GET /students/:studentID/courses/:courseID/chapters/:chapterID/assessments/:assessmentID"
  documentation: "Get the details of a specific assessment in a chapter of a course that a student is enrolled in"
  request_parameters:
    student_id: 
      type: "String"
      required: true
    course_id: 
      type: "String"
      required: true
    chapter_id: 
      type: "String"
      required: true
    assessment_id:
      type: "String"
      required: true
  response:
    status_code: 200
    body:
    # Returns assessment details

- endpoint: "POST /students/:studentID/courses/:courseID/chapters/:chapterID/assessments/:assessmentID"
  documentation: -
    Update the progress of a student in a specific chapter of a course
    Fails if the assessment is already completed or if the assessment 
    has a time limit and the difference between the current time and 
    `initAccessDate` is greater than the time limit.
  request_parameters:
    student_id: 
      type: "String"
      required: true
    course_id: 
      type: "String"
      required: true
    chapter_id: 
      type: "String"
      required: true
    assessment_id:
      type: "String"
      required: true
  request_body:
    assessmentData:
      type: "Dynamic"
      required: true
    assessmentRating:
      type: "Number"
      required: true
    assessmentScore:
      type: "Number"
      required: true
    submissionDate:
      type: "date-time"
      required: true
  response:
    status_code: 200

- endpoint: "PATCH /students/:studentID/courses/:courseID/chapters/:chapterID"
  documentation: "Update the last accessed time of a chapter in a course for a student"
  request_parameters:
    student_id: 
      type: "String"
      required: true
    course_id: 
      type: "String"
      required: true
    chapter_id: 
      type: "String"
      required: true
  response:
    status_code: 200

- endpoint: "PATCH /students/:studentID/courses/:courseID/chapters/:chapterID/assessments/:assessmentID"
  documentation: "Update the last accessed time of an assessment in a chapter of a course for a student"
  request_parameters:
    student_id: 
      type: "String"
      required: true
    course_id: 
      type: "String"
      required: true
    chapter_id: 
      type: "String"
      required: true
    assessment_id:
      type: "String"
      required: true
  response:
    status_code: 200



- endpoint: "GET /instructors/:instructorID/courses"
  documentation: "Get the list of courses that an instructor is teaching"
  request_parameters:
    instructor_id: 
      type: "String"
      required: true
    max_results:
      type: "Integer"
      required: false
    page:
      type: "Integer"
      required: false
  response:
    status_code: 200
    body: 
    # Returns courseName, courseCode, courseID, statistics

- endpoint: "GET /instructors/:instructorID/courses/:courseID"
  documentation: "Get the details of a specific course that an instructor is teaching"
  request_parameters:
    instructor_id: 
      type: "String"
      required: true
    course_id: 
      type: "String"
      required: true
    max_results:
      type: "Integer"
      required: false
    page:
      type: "Integer"
      required: false
  response:
    status_code: 200
    body:
    # Returns courseName, courseCode, courseID, statistics, metadata, chapters

- endpoint: "PATCH /instructors/:instructorID/courses/:courseID"
  documentation: "Update the details of a course that an instructor is teaching"
  request_parameters:
    instructor_id: 
      type: "String"
      required: true
    course_id: 
      type: "String"
      required: true
  request_body:
    courseName:
      type: "String"
      required: false
    courseCode:
      type: "String"
      required: false
    description:
      type: "String"
      required: false
    tags:
      type: "Array"
      required: false
    courseDescription: "Updated Course Description"
  response:
    status_code: 200

- endpoint: "DELETE /instructors/:instructorID/courses/:courseID"
  documentation: "Delete a course that an instructor is teaching"
  request_parameters:
    instructor_id:
      type: "String"
      required: true
    course_id:
      type: "String"
      required: true
  response:
    status_code: 200

- endpoint: "GET /instructors/:instructorID/courses/:courseID/chapters/:chapterID"
  documentation: "Get the details of a specific chapter in a course that an instructor is teaching"
  request_parameters:
    instructor_id: 
      type: "String"
      required: true
    course_id: 
      type: "String"
      required: true
    chapter_id: 
      type: "String"
      required: true
  response:
    status_code: 200
    body:
    # Returns chapterName, chapterID, videos, assessments

- endpoint: "POST /instructors/:instructorID/courses/:courseID/chapters/:chapterID"
  documentation: "Add a new chapter to a course"
  request_parameters:
    instructor_id: 
      type: "String"
      required: true
    course_id: 
      type: "String"
      required: true
    chapter_id: 
      type: "String"
      required: true
  request_body:
  response:
    status_code: 200

# Create api to add videos, assessments and update them

- endpoint: "PATCH /instructors/:instructorID/courses/:courseID/chapters/:chapterID/"
  documentation: "Update the details of a chapter in a course"
  request_parameters:
    instructor_id: 
      type: "String"
      required: true
    course_id: 
      type: "String"
      required: true
  request_body:
    chapter_id: "chapterID"
    source: "Updated Chapter Video URL"
  response:
    status_code: 200

- endpoint: "DELETE /instructors/:instructorID/courses/:courseID/chapters/:chapterID"
  documentation: "Delete a chapter in a course"
  request_parameters:
    instructor_id: 
      type: "String"
      required: true
    course_id: 
      type: "String"
      required: true
    chapter_id: 
      type: "String"
      required: true
  response:
    status_code: 200

# get analysis of student performance
# allow instructor to access student's performance

# enroll a student in a course
# unenroll a student from a course